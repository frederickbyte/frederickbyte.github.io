{"version":3,"sources":["webpack:///./src/images/hpc/registration.png","webpack:///./node_modules/@material-ui/core/esm/Typography/Typography.js","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/createSvgIcon.js","webpack:///./node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","webpack:///./node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","webpack:///./src/pages/hpcinfo.jsx","webpack:///./src/images/hpc/users.png"],"names":["module","exports","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","props","ref","_props$align","align","classes","className","_props$color","color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","Component","root","concat","capitalize","withStyles","theme","margin","typography","caption","button","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name","path","d","SvgIcon","muiName","marginLeft","spacing","marginRight","backgroundColor","grey","borderRadius","cursor","boxShadow","shadows","icon","ButtonBase","focusRipple","MoreHoriz","children","_props$component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","map","index","li","key","ol","items","reduce","acc","current","length","push","insertSeparators","slice","onClick","renderItemsBeforeAndAfter","flexWrap","alignItems","padding","listStyle","userSelect","HPCInfo","style","flex","justifyContent","title","description","lang","aria-label","to","fontFamily","aria-current","fontWeight","container","direction","justify","src","require","alt"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,4D,8KC2IvCC,EAAwB,CAC1BC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,UAAW,KACXC,UAAW,KACXC,MAAO,IACPC,MAAO,KAEL,EAAa,cAAiB,SAAoBC,EAAOC,GAC3D,IAAIC,EAAeF,EAAMG,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9CE,EAAUJ,EAAMI,QAChBC,EAAYL,EAAMK,UAClBC,EAAeN,EAAMO,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9CE,EAAYR,EAAMQ,UAClBC,EAAiBT,EAAMU,QACvBA,OAA6B,IAAnBD,EAA4B,UAAYA,EAClDE,EAAsBX,EAAMY,aAC5BA,OAAuC,IAAxBD,GAAyCA,EACxDE,EAAgBb,EAAMc,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAmBf,EAAMgB,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDE,EAAiBjB,EAAMkB,QACvBA,OAA6B,IAAnBD,EAA4B,QAAUA,EAChDE,EAAwBnB,EAAMoB,eAC9BA,OAA2C,IAA1BD,EAAmC9B,EAAwB8B,EAC5EE,EAAQ,YAAyBrB,EAAO,CAAC,QAAS,UAAW,YAAa,QAAS,YAAa,UAAW,eAAgB,SAAU,YAAa,UAAW,mBAE7JsB,EAAYd,IAAcQ,EAAY,IAAMI,EAAeF,IAAY7B,EAAsB6B,KAAa,OAC9G,OAAoB,gBAAoBI,EAAW,YAAS,CAC1DjB,UAAW,YAAKD,EAAQmB,KAAMlB,EAAuB,YAAZa,GAAyBd,EAAQc,GAAoB,YAAVX,GAAuBH,EAAQ,QAAQoB,OAAO,OAAAC,EAAA,GAAWlB,KAAUO,GAAUV,EAAQU,OAAQF,GAAgBR,EAAQQ,aAAcI,GAAaZ,EAAQY,UAAqB,YAAVb,GAAuBC,EAAQ,QAAQoB,OAAO,OAAAC,EAAA,GAAWtB,KAAsB,YAAZO,GAAyBN,EAAQ,UAAUoB,OAAO,OAAAC,EAAA,GAAWf,MACvXT,IAAKA,GACJoB,OAwEU,SAAAK,EAAA,IAlPK,SAAgBC,GAClC,MAAO,CAELJ,KAAM,CACJK,OAAQ,GAIV7B,MAAO4B,EAAME,WAAW9B,MAGxBD,MAAO6B,EAAME,WAAW/B,MAGxBgC,QAASH,EAAME,WAAWC,QAG1BC,OAAQJ,EAAME,WAAWE,OAGzBzC,GAAIqC,EAAME,WAAWvC,GAGrBC,GAAIoC,EAAME,WAAWtC,GAGrBC,GAAImC,EAAME,WAAWrC,GAGrBC,GAAIkC,EAAME,WAAWpC,GAGrBC,GAAIiC,EAAME,WAAWnC,GAGrBC,GAAIgC,EAAME,WAAWlC,GAGrBC,UAAW+B,EAAME,WAAWjC,UAG5BC,UAAW8B,EAAME,WAAWhC,UAG5BmC,SAAUL,EAAME,WAAWG,SAG3BC,OAAQ,CACNC,SAAU,WACVC,OAAQ,EACRC,MAAO,EACPC,SAAU,UAIZC,UAAW,CACTC,UAAW,QAIbC,YAAa,CACXD,UAAW,UAIbE,WAAY,CACVF,UAAW,SAIbG,aAAc,CACZH,UAAW,WAIbzB,OAAQ,CACNuB,SAAU,SACVM,aAAc,WACdC,WAAY,UAIdhC,aAAc,CACZiC,aAAc,UAIhB7B,UAAW,CACT6B,aAAc,IAIhBC,aAAc,CACZvC,MAAO,WAITwC,aAAc,CACZxC,MAAOoB,EAAMqB,QAAQC,QAAQC,MAI/BC,eAAgB,CACd5C,MAAOoB,EAAMqB,QAAQI,UAAUF,MAIjCG,iBAAkB,CAChB9C,MAAOoB,EAAMqB,QAAQM,KAAKL,SAI5BM,mBAAoB,CAClBhD,MAAOoB,EAAMqB,QAAQM,KAAKF,WAI5BI,WAAY,CACVjD,MAAOoB,EAAMqB,QAAQS,MAAMP,MAI7BQ,cAAe,CACbhD,QAAS,UAIXiD,aAAc,CACZjD,QAAS,YAkHmB,CAChCkD,KAAM,iBADO,CAEZ,G,wBCrPY,ICHuBC,EAChCvC,EDES,GCHuBuC,EDGK,gBAAoB,OAAQ,CACrEC,EAAG,yJCHCxC,EAAY,OAAW,cAAiB,SAAUtB,EAAOC,GAC3D,OAAoB,gBAAoB8D,EAAA,EAAS,YAAS,GAAI/D,EAAO,CACnEC,IAAKA,IACH4D,QAOIG,QAAUD,EAAA,EAAQC,QACrB1C,G,YC0CM,aAAAI,EAAA,IAhDF,SAAgBC,GAC3B,MAAO,CACLJ,KAAM,CACJb,QAAS,OACTuD,WAAYtC,EAAMuC,QAAQ,IAC1BC,YAAaxC,EAAMuC,QAAQ,IAC3BE,gBAAiBzC,EAAMqB,QAAQqB,KAAK,KACpC9D,MAAOoB,EAAMqB,QAAQqB,KAAK,KAC1BC,aAAc,EACdC,OAAQ,UACR,mBAAoB,CAClBH,gBAAiBzC,EAAMqB,QAAQqB,KAAK,MAEtC,WAAY,CACVG,UAAW7C,EAAM8C,QAAQ,GACzBL,gBAAiB,YAAUzC,EAAMqB,QAAQqB,KAAK,KAAM,OAGxDK,KAAM,CACJtC,MAAO,GACPD,OAAQ,OA4BoB,CAChCyB,KAAM,8BADO,EAnBf,SAA6B5D,GAC3B,IAAII,EAAUJ,EAAMI,QAChBiB,EAAQ,YAAyBrB,EAAO,CAAC,YAE7C,OAAoB,gBAAoB2E,EAAA,EAAY,YAAS,CAC3DnE,UAAW,KACXH,UAAWD,EAAQmB,KACnBqD,aAAa,GACZvD,GAAqB,gBAAoBwD,EAAe,CACzDxE,UAAWD,EAAQsE,WCQvB,IAAI,EAAc,cAAiB,SAAqB1E,EAAOC,GAC7D,IAAI6E,EAAW9E,EAAM8E,SACjB1E,EAAUJ,EAAMI,QAChBC,EAAYL,EAAMK,UAClB0E,EAAmB/E,EAAMQ,UACzBc,OAAiC,IAArByD,EAA8B,MAAQA,EAClDC,EAAoBhF,EAAMiF,WAC1BA,OAAmC,IAAtBD,EAA+B,YAAcA,EAC1DE,EAAwBlF,EAAMmF,mBAC9BA,OAA+C,IAA1BD,EAAmC,EAAIA,EAC5DE,EAAwBpF,EAAMqF,oBAC9BA,OAAgD,IAA1BD,EAAmC,EAAIA,EAC7DE,EAAkBtF,EAAMuF,SACxBA,OAA+B,IAApBD,EAA6B,EAAIA,EAC5CE,EAAmBxF,EAAMyF,UACzBA,OAAiC,IAArBD,EAA8B,IAAMA,EAChDnE,EAAQ,YAAyBrB,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,aAAc,qBAAsB,sBAAuB,WAAY,cAEjK0F,EAAkB,YAAe,GACjCC,EAAWD,EAAgB,GAC3BE,EAAcF,EAAgB,GAwB9BG,EAAW,WAAeC,QAAQhB,GAAUiB,QAAO,SAAUC,GAO/D,OAAO,iBAAqBA,MAC3BC,KAAI,SAAUD,EAAOE,GACtB,OAAoB,gBAAoB,KAAM,CAC5C7F,UAAWD,EAAQ+F,GACnBC,IAAK,SAAS5E,OAAO0E,IACpBF,MAEL,OAAoB,gBAAoB,EAAY,YAAS,CAC3D/F,IAAKA,EACLO,UAAWc,EACXf,MAAO,gBACPF,UAAW,YAAKD,EAAQmB,KAAMlB,IAC7BgB,GAAqB,gBAAoB,KAAM,CAChDhB,UAAWD,EAAQiG,IAhFvB,SAA0BC,EAAOjG,EAAWoF,GAC1C,OAAOa,EAAMC,QAAO,SAAUC,EAAKC,EAASP,GAW1C,OAVIA,EAAQI,EAAMI,OAAS,EACzBF,EAAMA,EAAIhF,OAAOiF,EAAsB,gBAAoB,KAAM,CAC/D,eAAe,EACfL,IAAK,aAAa5E,OAAO0E,GACzB7F,UAAWA,GACVoF,IAEHe,EAAIG,KAAKF,GAGJD,IACN,IAoEAI,CAAiBjB,GAAYJ,GAAYM,EAASa,QAAUnB,EAAWM,EA3C1C,SAAmCA,GAOjE,OAAIR,EAAsBF,GAAsBU,EAASa,OAKhDb,EAGF,GAAGrE,OAAO,YAAmBqE,EAASgB,MAAM,EAAGxB,IAAuB,CAAc,gBAAoB,EAAqB,CAClI,aAAcJ,EACdmB,IAAK,WACLU,QAjBsB,WACtBlB,GAAY,OAiBT,YAAmBC,EAASgB,MAAMhB,EAASa,OAASvB,EAAoBU,EAASa,UAwBHK,CAA0BlB,GAAWzF,EAAQqF,UAAWA,QAuDhI,WAAA/D,EAAA,GAlKK,CAElBH,KAAM,GAGN8E,GAAI,CACF3F,QAAS,OACTsG,SAAU,OACVC,WAAY,SACZC,QAAS,EACTtF,OAAQ,EACRuF,UAAW,QAIbhB,GAAI,GAGJV,UAAW,CACT/E,QAAS,OACT0G,WAAY,OACZnD,WAAY,EACZE,YAAa,IA4IiB,CAChCP,KAAM,kBADO,CAEZ,I,kCCjLH,0FAmEeyD,UA5DC,kBACd,yBAAKC,MAAO,CAAE5G,QAAS,OAAQ6G,KAAM,EAAGC,eAAgB,WACtD,yBAAKnH,UAAW,OACd,kBAAC,IAAD,CACEoH,MAAM,4BACNC,YAAY,0CACZC,KAAK,OAEP,kBAAC,IAAD,CAAaC,aAAW,uBACtB,kBAAC,OAAD,CACEC,GAAG,IACHP,MAAO,CACL5G,QAAS,OACTH,MAAO,UACPuH,WAAW,oBALf,QAUA,yBACEC,eAAa,OACbT,MAAO,CACL5G,QAAS,OACTH,MAAO,UACPuH,WAAW,oBALf,iBAWF,0BAAMzH,UAAS,eAAf,iBACA,uBAAGiH,MAAO,CAAEU,WAAY,MAAxB,wEAEE,6BACA,6BAHF,uCAMA,iGACA,kBAAC,IAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBACtC,gCACE,yBACEC,IAAKC,EAAQ,QACbC,IAAG,mBACHjI,UAAW,YAEb,0DAEF,gCACE,yBACE+H,IAAKC,EAAQ,QACbC,IAAG,gBACHjI,UAAW,YAEb,uD,qBC5DVlB,EAAOC,QAAU,IAA0B","file":"component---src-pages-hpcinfo-jsx-0feccf38229a40c52303.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/registration-75f3d09dfbaf07cb938545f8cd34ffca.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different DOM element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import * as React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport SvgIcon from '../../SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(SvgIcon, _extends({}, props, {\n      ref: ref\n    }), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.reduce\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand() {\n      setExpanded(true);\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: you have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it maps the variant to a good default headline component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport SEO from \"../components/seo\"\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport \"../site.css\"\r\n\r\nconst HPCInfo = () => (\r\n  <div style={{ display: \"flex\", flex: 1, justifyContent: \"center\" }}>\r\n    <div className={\"hpc\"}>\r\n      <SEO\r\n        title=\"Andrew Stolzle | MyMentor\"\r\n        description=\"mymentor mobile application for Android\"\r\n        lang=\"en\"\r\n      />\r\n      <Breadcrumbs aria-label=\"mymentor breadcrumb\">\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            display: \"flex\",\r\n            color: \"#121212\",\r\n            fontFamily: `Sen, sans-serif`,\r\n          }}\r\n        >\r\n          Home\r\n        </Link>\r\n        <div\r\n          aria-current=\"page\"\r\n          style={{\r\n            display: \"flex\",\r\n            color: \"#121212\",\r\n            fontFamily: `Sen, sans-serif`,\r\n          }}\r\n        >\r\n          HPCBudgeting\r\n        </div>\r\n      </Breadcrumbs>\r\n      <span className={`index-title`}>HPC Budgeting</span>\r\n      <p style={{ fontWeight: 600 }}>\r\n        Development Stack: Angular, Typescript, Material UI, Telerik Kendo UI\r\n        <br />\r\n        <br />\r\n        Other tools: VS Code, Visual Studio\r\n      </p>\r\n      <h3>More info coming soon! For now, here are a couple of screenshots:</h3>\r\n      <Grid container direction=\"row\" justify=\"space-evenly\">\r\n        <figure>\r\n          <img\r\n            src={require(\"../images/hpc/registration.png\")}\r\n            alt={`hpc registration`}\r\n            className={\"hpc-img\"}\r\n          />\r\n          <figcaption>User registration</figcaption>\r\n        </figure>\r\n        <figure>\r\n          <img\r\n            src={require(\"../images/hpc/users.png\")}\r\n            alt={`hpc user grid`}\r\n            className={\"hpc-img\"}\r\n          />\r\n          <figcaption>User grid</figcaption>\r\n        </figure>\r\n      </Grid>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default HPCInfo\r\n","module.exports = __webpack_public_path__ + \"static/users-4b42d53ad96d656d951fa6b9b8dc67d3.png\";"],"sourceRoot":""}