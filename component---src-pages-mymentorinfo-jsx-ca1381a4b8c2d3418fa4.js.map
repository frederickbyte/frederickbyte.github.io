{"version":3,"sources":["webpack:///./src/images/mymentor/profile.png","webpack:///./src/images/mymentor/topic.png","webpack:///./src/pages/mymentorinfo.jsx","webpack:///./src/images/mymentor/home.png","webpack:///./src/images/mymentor/events.png","webpack:///./src/images/mymentor/chat.png","webpack:///./src/images/mymentor/interests.png"],"names":["module","exports","MyMentorInfo","style","display","flex","justifyContent","className","title","description","lang","aria-label","to","color","fontFamily","aria-current","fontWeight","container","direction","justify","src","require","alt","variant","startIcon","size","onClick","window","open","margin","width"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,uD,uBCA3CD,EAAOC,QAAU,IAA0B,qD,kCCA3C,2HAoKeC,UA3JM,kBACnB,yBAAKC,MAAO,CAAEC,QAAS,OAAQC,KAAM,EAAGC,eAAgB,WACtD,yBAAKC,UAAW,YACd,kBAAC,IAAD,CACEC,MAAM,4BACNC,YAAY,0CACZC,KAAK,OAEP,kBAAC,IAAD,CAAaC,aAAW,uBACtB,kBAAC,OAAD,CACEC,GAAG,IACHT,MAAO,CACLC,QAAS,OACTS,MAAO,UACPC,WAAW,oBALf,QAUA,yBACEC,eAAa,OACbZ,MAAO,CACLC,QAAS,OACTS,MAAO,UACPC,WAAW,oBALf,aAWF,0BAAMP,UAAS,eAAf,YACA,uBAAGJ,MAAO,CAAEa,WAAY,MAAxB,wFAGE,6BACA,6BAJF,gDAOA,0kBAWA,oDACA,wOAGgE,IAC9D,qHAJF,+NAYA,kBAAC,IAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBACtC,gCACE,yBACEC,IAAKC,EAAQ,QACbC,IAAG,gBACHf,UAAW,iBAEb,0DAEF,gCACE,yBACEa,IAAKC,EAAQ,QACbC,IAAG,kBACHf,UAAW,iBAEb,oEAGJ,6CACA,iUAOA,kBAAC,IAAD,CAAMU,WAAS,EAACC,UAAU,MAAMC,QAAQ,UACtC,gCACE,yBACEC,IAAKC,EAAQ,QACbC,IAAG,mBACHf,UAAW,iBAEb,oEAGJ,8WAK+D,oCAL/D,8IASA,kBAAC,IAAD,CAAMU,WAAS,EAACC,UAAU,MAAMC,QAAQ,UACtC,gCACE,yBACEC,IAAKC,EAAQ,QACbC,IAAG,gBACHf,UAAW,iBAEb,mDAGJ,4XAOA,kBAAC,IAAD,CAAMU,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBACtC,gCACE,yBACEC,IAAKC,EAAQ,QACbC,IAAG,mBACHf,UAAW,iBAEb,qDAEF,gCACE,yBACEa,IAAKC,EAAQ,QACbC,IAAG,yBACHf,UAAW,iBAEb,oEAGJ,kBAAC,IAAD,CACEM,MAAM,UACNU,QAAQ,YACRC,UAAW,kBAAC,IAAD,CAAUC,KAAK,WAC1BC,QAAS,kBAAMC,OAAOC,KAAK,8CAC3BzB,MAAO,CAAE0B,OAAQ,SAAUC,MAAO,gBALpC,mB,qBCvJN9B,EAAOC,QAAU,IAA0B,oD,qBCA3CD,EAAOC,QAAU,IAA0B,sD,qBCA3CD,EAAOC,QAAU,IAA0B,oD,qBCA3CD,EAAOC,QAAU,IAA0B","file":"component---src-pages-mymentorinfo-jsx-ca1381a4b8c2d3418fa4.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/profile-920d88fe89436a18948eb202b3cdd533.png\";","module.exports = __webpack_public_path__ + \"static/topic-71ae7dc4750b01385feed846043b739e.png\";","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport SEO from \"../components/seo\"\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\"\nimport Button from \"@material-ui/core/Button\"\nimport CodeIcon from \"@material-ui/icons/Code\"\nimport Grid from \"@material-ui/core/Grid\"\nimport \"../site.css\"\n\nconst MyMentorInfo = () => (\n  <div style={{ display: \"flex\", flex: 1, justifyContent: \"center\" }}>\n    <div className={\"mymentor\"}>\n      <SEO\n        title=\"Andrew Stolzle | MyMentor\"\n        description=\"mymentor mobile application for Android\"\n        lang=\"en\"\n      />\n      <Breadcrumbs aria-label=\"mymentor breadcrumb\">\n        <Link\n          to=\"/\"\n          style={{\n            display: \"flex\",\n            color: \"#121212\",\n            fontFamily: `Sen, sans-serif`,\n          }}\n        >\n          Home\n        </Link>\n        <div\n          aria-current=\"page\"\n          style={{\n            display: \"flex\",\n            color: \"#121212\",\n            fontFamily: `Sen, sans-serif`,\n          }}\n        >\n          MyMentor\n        </div>\n      </Breadcrumbs>\n      <span className={`index-title`}>MyMentor</span>\n      <p style={{ fontWeight: 600 }}>\n        Development Stack: Xamarin Forms, C#, XAML, Material UI, Telerik Kendo\n        UI, SQL Server\n        <br />\n        <br />\n        Other tools: Visual Studio, Android Emulator\n      </p>\n      <p>\n        This was a project originally designed for my University computer\n        science course. The goal of MyMentor is to provide a platform that\n        teachers can use to help mentor students in both their inter- and\n        extra-curricular needs. MyMentor aims to foster professional, yet\n        personal relationships between students and teachers. These\n        relationships will help students throughout their college journey and\n        beyond by allowing them to easily communicate with peers and professors\n        so that they have access to all of the support they need to succeed at\n        their University.\n      </p>\n      <h3>Design and Structure</h3>\n      <p>\n        Two essential components guided the design of this product: an intuitive\n        layout and consistent style across the app. MyMentor needed to have\n        simple colors, bottom navigation, familiar buttons and icons.{\" \"}\n        <em>\n          I did not want to force the user to learn or adapt to new buttons,\n          shapes, or actions\n        </em>\n        . In order to create simpler and more robust interfaces, I\n        utilized the model-view-controller (MVC) pattern, a practice that is easy to\n        implement with Xamarin. Here are two of the main screens a user will interact with:\n      </p>\n      <Grid container direction=\"row\" justify=\"space-evenly\">\n        <figure>\n          <img\n            src={require(\"../images/mymentor/home.png\")}\n            alt={`mymentor home`}\n            className={\"mymentor-img\"}\n          />\n          <figcaption>Student home page</figcaption>\n        </figure>\n        <figure>\n          <img\n            src={require(\"../images/mymentor/events.png\")}\n            alt={`mymentor events`}\n            className={\"mymentor-img\"}\n          />\n          <figcaption>Community events and posts</figcaption>\n        </figure>\n      </Grid>\n      <h3>Main Features</h3>\n      <p>\n        MyMentor revolves around matching students and professors primarily by\n        their shared academic interests (i.e. matching users by subjects they\n        both like). Upon initial log-in, users are asked to select their\n        favorite subject, which MyMentor then uses to find the best matches for\n        that person.\n      </p>\n      <Grid container direction=\"row\" justify=\"center\">\n        <figure>\n          <img\n            src={require(\"../images/mymentor/interests.png\")}\n            alt={`mymentor profile`}\n            className={\"mymentor-img\"}\n          />\n          <figcaption>Selecting favorite subject</figcaption>\n        </figure>\n      </Grid>\n      <p>\n        MyMentor allows users to communicate with each other with an instant\n        message feature, which is accomplished via polling. Every 10 seconds,\n        MyMentor polls a SQL database to check for any new messages for the\n        logged-in user. Implementing push notifications would be an upgrade\n        because with this method, as new messages would be delivered <em>only</em> when\n        a new message is sent to the user. This prevents unecessary polling and\n        database calls that the current method of polling relies on.\n      </p>\n      <Grid container direction=\"row\" justify=\"center\">\n        <figure>\n          <img\n            src={require(\"../images/mymentor/chat.png\")}\n            alt={`mymentor chat`}\n            className={\"mymentor-img\"}\n          />\n          <figcaption>Chat page</figcaption>\n        </figure>\n      </Grid>\n      <p>\n        Users can customize their profile by selecting which subjects they're\n        interested in and by updating their display name. Profiles are visible\n        to other users so that they can see what you are interested in and can then\n        determine if you would be a good match for a mentorship. Users can also\n        add new subjects to their profile after creating an account.\n      </p>\n      <Grid container direction=\"row\" justify=\"space-evenly\">\n        <figure>\n          <img\n            src={require(\"../images/mymentor/profile.png\")}\n            alt={`mymentor profile`}\n            className={\"mymentor-img\"}\n          />\n          <figcaption>User profile</figcaption>\n        </figure>\n        <figure>\n          <img\n            src={require(\"../images/mymentor/topic.png\")}\n            alt={`mymentor profile topic`}\n            className={\"mymentor-img\"}\n          />\n          <figcaption>Adding subjects to profile</figcaption>\n        </figure>\n      </Grid>\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        startIcon={<CodeIcon size=\"medium\" />}\n        onClick={() => window.open(\"https://github.com/frederickbyte/MyMentor\")}\n        style={{ margin: \"0 auto\", width: \"fit-content\" }}\n      >\n        SOURCE CODE\n      </Button>\n    </div>\n  </div>\n)\n\nexport default MyMentorInfo\n","module.exports = __webpack_public_path__ + \"static/home-2962b39deb3cc6b2d93ed9a1db20d465.png\";","module.exports = __webpack_public_path__ + \"static/events-9f19d0cca2bda761ffcf6ff6e2057095.png\";","module.exports = __webpack_public_path__ + \"static/chat-30e67610ea590cb7669cbdaf51036027.png\";","module.exports = __webpack_public_path__ + \"static/interests-1cdc929ac5094ce815ea41ff7fc18457.png\";"],"sourceRoot":""}